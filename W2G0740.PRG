* Program Name: W2G0740
* Author:       David M. Wysocki
* Company:      Diversified Technical Service, Inc.
* Client:       Palm Beach Kennal Club
* Purpose:      Database Error Reporting - Batch Error Report.
*
*
FUNCTION W2G0740()
MEMVAR GETLIST
PRIVATE PREV_DATE := DATE()
PRIVATE PREV_BNUM := 0
SET ESCAPE ON
SET SAFETY OFF
PRIVATE L_NUM     := 0
PRIVATE P_NUMBER  := 0
PRIVATE TIME      := SPACE(08)
PRIVATE COMP1     := SPACE(12)
PRIVATE COMP2     := SPACE(12)
PRIVATE COMP3     := SPACE(12)
PRIVATE COMP4     := SPACE(12)
PRIVATE MESG_1    := 'NO TRANSACTIONS FOUND FOR THIS BATCH.'
PRIVATE MESG_2    := 'BATCH OUT OF BALANCE.'
PRIVATE MESG_3    := 'Batch Control Record not found. Transactions deleted.'
PRIVATE TOT_GRS   := 0
PRIVATE TOT_FED   := 0
PRIVATE TOT_STA   := 0

SELECT 1
USE BATCHCTL INDEX BATCHCTL

SELECT 2
USE TICKET INDEX BATCHID

SELECT 3
USE RPT0740
ZAP

SELECT 4
USE PAYER

CLEAR

@ 0,10 SAY 'DATABASE ERROR REPORT - BATCH ERRORS.'
@ 2,10 SAY '1 - RE-PRINT PREVIOUS ERROR REPORT.'
@ 4,10 SAY '2 - CREATE NEW REPORT. OLD REPORT WILL BE DELETED.'
@ 6,10 SAY '3 - EXIT REPORT.'

M->CHOICE = ' '

DO WHILE .NOT. M->CHOICE $'123'
   M->CHOICE = ' '
   @ 8,10 GET M->CHOICE PICTURE '9'
   READ
ENDDO

IF M->CHOICE = '3'
   CLEAR
   CLOSE DATABASES
   RETURN (NIL)
ENDIF

SET PRINTER TO C:\TEMP\W2G0740.TXT

IF M->CHOICE = '1'
   GOTO TOP
   SET DEVICE TO PRINTER
   m->printer_init := 'e(10u&l1o&l8d&l5e&l66f&k2s(s8v'
   @ 0,0 say m->printer_init
   
   DO W2G0745
   SELECT 3
   DO WHILE .NOT. EOF()
      @ M->L_NUM, 01 SAY RPT0740->BATCH_DATE
      @ M->L_NUM, 10 SAY RPT0740->BATCH_NUM  PICTURE '9999'
      @ M->L_NUM, 20 SAY RPT0740->TOTAL_GROS PICTURE '999,999,999.99'
      @ M->L_NUM, 35 SAY RPT0740->TOTAL_FED  PICTURE '999,999,999.99'
*     @ M->L_NUM, 50 SAY RPT0740->TOTAL_STA  PICTURE '999,999,999.99'
      @ M->L_NUM, 65 SAY RPT0740->PERF_NUM   PICTURE '!!!!'
      @ M->L_NUM, 80 SAY RPT0740->DESCRPT
      M->L_NUM = M->L_NUM + 1
      IF M->L_NUM > 58
         DO W2G0745
         SELECT 3
      ENDIF
      SKIP
   ENDDO
   EJECT
   SET DEVICE TO SCREEN
   CLEAR
   CLOSE DATABASES
   RETURN (NIL)
ENDIF

@ 24,0 SAY "VERIFY THAT YOU WANT TO CREATE A NEW REPORT BY RE-ENTERING '2'."
M->CHOICE = ' '

DO WHILE .NOT. M->CHOICE $'123'
   M->CHOICE = ' '
   @ 8,10 GET M->CHOICE PICTURE '9'
   READ
ENDDO

IF M->CHOICE <> '2'
   CLEAR
   CLOSE DATABASES
   RETURN (NIL)
ENDIF

CLEAR

M->TIME = TIME()
@ 1,20 SAY 'REPORT START TIME: ' + M->TIME
@ 3,20 SAY 'REBUILDING BATCH CONTROL INDEXES. ONE MOMENT PLEASE.'

SELECT 1
PACK
GOTO TOP

@ 5,20 SAY 'REBUILDING TICKET INDEXES. ONE MOMENT PLEASE.'

SELECT 2
PACK
GOTO TOP

SELECT 3
ZAP

SELECT 1

@ 07,20 SAY 'CREATING REPORT. ONE MOMENT PLEASE.'

DO WHILE .NOT. EOF()
   SELECT 2

   M->KEY = SPACE (12)
   M->KEY = DTOC(BATCHCTL->BATCH_DATE) + STR(BATCHCTL->BATCH_NUM,4)

   SEEK M->KEY

   IF EOF()
      SELECT 3
      APPEND BLANK
      REPLACE RPT0740->BATCH_DATE WITH BATCHCTL->BATCH_DATE
      REPLACE RPT0740->BATCH_NUM  WITH BATCHCTL->BATCH_NUM
      REPLACE RPT0740->TOTAL_GROS WITH BATCHCTL->TOTAL_GROS
      REPLACE RPT0740->TOTAL_FED  WITH BATCHCTL->TOTAL_FED
*     REPLACE RPT0740->TOTAL_STA  WITH BATCHCTL->TOTAL_STA
      REPLACE RPT0740->PERF_NUM   WITH BATCHCTL->PERF_NUM
      REPLACE RPT0740->DESCRPT    WITH M->MESG_1
      SELECT 1
      DELETE
      SKIP
      LOOP
   ENDIF

   M->GROSS = 0.00
   M->FED   = 0.00
*  M->STA   = 0.00

   DO WHILE TICKET->BATCH_DATE = BATCHCTL->BATCH_DATE .AND. ;
            TICKET->BATCH_NUM  = BATCHCTL->BATCH_NUM
          M->GROSS = M->GROSS + TICKET->GROSS
          M->FED   = M->FED   + TICKET->FED_WITH
*         M->STA   = M->STA   + TICKET->STA_WITH
          SKIP
   ENDDO

   M->COMP1 = STR(BATCHCTL->TOTAL_GROS,12,2)
   M->COMP2 = STR(BATCHCTL->TOTAL_FED,12,2)
   M->COMP3 = STR(M->GROSS,12,2)
   M->COMP4 = STR(M->FED,12,2)

   IF M->COMP1 = M->COMP3 .AND. M->COMP2 = M->COMP4
      SELECT 1
      SKIP
      LOOP
   ELSE
      SELECT 3
      APPEND BLANK
      REPLACE RPT0740->BATCH_DATE WITH BATCHCTL->BATCH_DATE
      REPLACE RPT0740->BATCH_NUM  WITH BATCHCTL->BATCH_NUM
      REPLACE RPT0740->TOTAL_GROS WITH BATCHCTL->TOTAL_GROS
      REPLACE RPT0740->TOTAL_FED  WITH BATCHCTL->TOTAL_FED
*     REPLACE RPT0740->TOTAL_STA  WITH BATCHCTL->TOTAL_STA
      REPLACE RPT0740->PERF_NUM   WITH BATCHCTL->PERF_NUM
      REPLACE RPT0740->DESCRPT    WITH M->MESG_2
   ENDIF
   SELECT 1
   SKIP
ENDDO

SELECT 2
GOTO TOP

DO WHILE .NOT. EOF()
   M->PREV_BDATE := TICKET->BATCH_DATE
   M->PREV_BNUM  := TICKET->BATCH_NUM
   M->KEY = DTOC(M->PREV_BDATE)+STR(PREV_BNUM,4)
   SELECT 1
   SEEK M->KEY
   IF EOF()
      SELECT 3
      APPEND BLANK
      REPLACE RPT0740->BATCH_DATE WITH TICKET->BATCH_DATE
      REPLACE RPT0740->BATCH_NUM  WITH TICKET->BATCH_NUM
      REPLACE RPT0740->TOTAL_GROS WITH 0
      REPLACE RPT0740->TOTAL_FED  WITH 0
*     REPLACE RPT0740->TOTAL_STA  WITH 0
      REPLACE RPT0740->PERF_NUM   WITH TICKET->PERF_NUM
      REPLACE RPT0740->DESCRPT    WITH M->MESG_3
   ENDIF   
   SELECT 2
   DO WHILE TICKET->BATCH_DATE = M->PREV_BDATE .AND. ;
                TICKET->BATCH_NUM  = M->PREV_BNUM  
      SELECT 1
      IF EOF()
         SELECT 2
             DELETE
      ELSE
             SELECT 2
      ENDIF
      SKIP
   ENDDO
ENDDO

SET DEVICE TO PRINTER

m->printer_init := 'e(10u&l1o&l8d&l5e&l66f&k2s(s8v'
@ 0,0 say m->printer_init
   
DO W2G0745

SELECT 3
GOTO TOP
DO WHILE .NOT. EOF()
   @ M->L_NUM, 01 SAY RPT0740->BATCH_DATE
   @ M->L_NUM, 10 SAY RPT0740->BATCH_NUM  PICTURE '9999'
   @ M->L_NUM, 20 SAY RPT0740->TOTAL_GROS PICTURE '999,999,999.99'
   @ M->L_NUM, 35 SAY RPT0740->TOTAL_FED  PICTURE '999,999,999.99'
*  @ M->L_NUM, 50 SAY RPT0740->TOTAL_STA  PICTURE '999,999,999.99'
   @ M->L_NUM, 65 SAY RPT0740->PERF_NUM   PICTURE '!!!!'
   @ M->L_NUM, 80 SAY RPT0740->DESCRPT
   M->L_NUM = M->L_NUM + 1
   IF M->L_NUM > 58
      DO W2G0745
      SELECT 3
   ENDIF
   SKIP
ENDDO
EJECT
SELECT 1
PACK
SELECT 2
PACK
SET DEVICE TO SCREEN
@  9,20 SAY 'REPORT COMPLETE.'
@ 11,20 SAY 'REPORT END TIME: '
M->TIME = TIME()
@ 11,37 SAY M->TIME
WAIT
CLOSE DATABASES
RETURN (NIL)
* EOF W2G0740.PRG
